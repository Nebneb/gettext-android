import com.android.builder.core.BuilderConstants

apply plugin: 'com.android.library'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

android.libraryVariants.all { variant ->
    tasks.create(variant.buildType.name == BuilderConstants.RELEASE ?
            "compileReleasePoFiles" : "compileDebugPoFiles") {
        doFirst {
            rootProject.allprojects.each { proj ->
                def pofolder = new File("${proj.projectDir}/po/")
                if (pofolder.exists() && proj.hasProperty("android")) {
                    executePoCompile(proj, variant.buildType.name)
                }
            }
        }
    }
}

task buildDebugPoFiles {
    doFirst {
        rootProject.allprojects.each { proj ->
            println("compiling po files for project : ${proj.getName()}")
            if (proj.getTasks().findByName("compileDebugPoFiles") != null) {
                proj.getTasks().findByName("compileDebugPoFiles").execute()
            }
        }
    }
}

task buildReleasePoFiles {
    doFirst {
        rootProject.allprojects.each { proj ->
            if (proj.getTasks().findByName("compileReleasePoFiles") != null) {
                proj.getTasks().findByName("compileReleasePoFiles").execute()
            }
        }
    }
}

def executePoCompile(proj, variantName) {

    def packageName = "${proj.android.defaultConfig.applicationId}"

    if (proj.hasProperty('ext.poPackageName'))
        packageName = "${proj.ext.poPackageName}"

    def endDir = packageName.replace('.', '/')
    def outputDir = file("${proj.buildDir}/generated/source/r/${variantName}/${endDir}")

    outputDir.exists() || outputDir.mkdirs()
    exec {
        commandLine '../scripts/po-compile-all', "${proj.projectDir}/po",
                outputDir.getPath(),
                packageName
    }
}

preBuild.doFirst {
    buildDebugPoFiles.execute()
    buildReleasePoFiles.execute()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

