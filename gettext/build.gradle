apply plugin: 'com.android.library'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task jar(type: Jar, dependsOn: 'compileReleaseSources') {
    from "$buildDir/intermediates/classes/release/"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}


//tasks.create("compilePoFiles") {
//    doFirst {
//        rootProject.allprojects.each { proj ->
//            def pofolder = new File("${proj.projectDir}/po/")
//            if (pofolder.exists() && proj.hasProperty("android")) {
//                executePoCompile(proj)
//            }
//        }
//    }
//}

//task buildPoFiles {
//    doFirst {
//        rootProject.allprojects.each { proj ->
//            println("compiling po files for project : ${proj.getName()}")
//            if (proj.getTasks().findByName("compilePoFiles") != null) {
//                proj.getTasks().findByName("compilePoFiles").execute()
//            }
//        }
//    }
//}

//def executePoCompile(proj) {
//
//    def packageName = "${proj.android.defaultConfig.applicationId}"
//
//    if (proj.hasProperty('poPackageName'))
//        packageName = "${proj.poPackageName}"
//
//    def endDir = packageName.replace('.', '/')
//    def outputDir = file("${proj.buildDir}/generated/source/translations/${endDir}")
//
//    outputDir.exists() || outputDir.mkdirs()
//    exec {
//        commandLine '../scripts/po-compile-all', "${proj.projectDir}/po",
//                outputDir.getPath(),
//                packageName
//    }
//}

//preBuild.doFirst {
//    buildPoFiles.execute()
//}
